-- PROJETO SQL ESCOLAS
-- https://github.com/ErickVeronezi

-- TRIGGERS

-- TRIGGER PARA REALIZAR BACKUP DA TABELA ALUNO

CREATE TABLE BKP_ALUNO(
	IDALUNO INT,
	NOME VARCHAR(50) NOT NULL,
	NASCIMENTO DATE NOT NULL,
	EMAIL VARCHAR(50) NOT NULL UNIQUE,
	CPF CHAR(14) NOT NULL UNIQUE,
	FK_IDMATRICULA INT
)
GO

CREATE TRIGGER TRG_BKP_ALUNO
ON ALUNO
AFTER INSERT
AS
BEGIN
	INSERT INTO BKP_ALUNO (IDALUNO, NOME, NASCIMENTO, EMAIL, CPF)
	SELECT IDALUNO, NOME, NASCIMENTO, EMAIL, CPF
	FROM INSERTED;
END
GO





-- TRIGGER SIMPLES PARA CASO HAJA TROCA DE FUNÇÃO

CREATE TABLE BKP_FUNCIONARIO(
	IDFUNCIONARIO INT,
	NOME VARCHAR(50) NOT NULL,
	NASCIMENTO DATE NOT NULL,
	CPF CHAR(14) NOT NULL,
	CARGO_ANTIGO VARCHAR(30) NOT NULL,
	CARGO_NOVO VARCHAR(30),
	DATA_CONTRATACAO DATE NOT NULL,
	FK_IDESCOLA INT 
)
GO

CREATE TRIGGER TRG_BKP_FUNCIONARIO
ON FUNCIONARIO
AFTER UPDATE
AS
BEGIN
	INSERT INTO BKP_FUNCIONARIO (IDFUNCIONARIO, NOME, NASCIMENTO, CPF, CARGO_ANTIGO, CARGO_NOVO, DATA_CONTRATACAO, FK_IDESCOLA)
	SELECT D.IDFUNCIONARIO, D.NOME, D.NASCIMENTO, D.CPF, D.CARGO, I.CARGO, D.DATA_CONTRATACAO, D.FK_IDESCOLA
	FROM DELETED D
	INNER JOIN INSERTED I ON D.IDFUNCIONARIO = I.IDFUNCIONARIO
	WHERE D.CARGO <> I.CARGO 
END
GO

-- TRIGGER PARA DESLIGAMENTO DE FUNCIONARIO

CREATE TABLE DEL_FUNCIONARIO(
	IDFUNCIONARIO INT,
	NOME VARCHAR(50) NOT NULL,
	NASCIMENTO DATE NOT NULL,
	CPF CHAR(14) NOT NULL,
	CARGO VARCHAR(30) NOT NULL,
	DATA_CONTRATACAO DATE NOT NULL,
	DATA_ENCERRAMENTO_BANCO DATE NOT NULL, -- DATA ENCERRAMENTO
	FK_IDESCOLA INT
)
GO

CREATE TRIGGER TRG_DEL_FUNCIONARIO
ON FUNCIONARIO
AFTER DELETE
AS
BEGIN
	INSERT INTO DEL_FUNCIONARIO (IDFUNCIONARIO, NOME, NASCIMENTO, CPF, CARGO, DATA_CONTRATACAO, DATA_ENCERRAMENTO_BANCO, FK_IDESCOLA)
	SELECT D.IDFUNCIONARIO, D.NOME, D.NASCIMENTO, D.CPF, D.CARGO, D.DATA_CONTRATACAO, GETDATE(), D.FK_IDESCOLA
	FROM DELETED D
END
GO

-- TRIGGER PARA IMPEDIR CPF DUPLICADO ENTRE ALUNO E FUNCIONARIO (SOMENTE PARA TESTE)

CREATE TRIGGER TRG_VERIFICAR_CPF
ON ALUNO
AFTER INSERT
AS
BEGIN
	IF EXISTS	(SELECT 1 FROM FUNCIONARIO F
				JOIN INSERTED I ON F.CPF = I.CPF)

	BEGIN
		RAISERROR('CPF já está sendo utilizado como FUNCIONARIO', 16, 1)
		ROLLBACK TRANSACTION 
	END
END
GO

-- TRIGGER PARA IMPEDIR MATRICULA COM DATA_INICIO > DATA_FIM

CREATE TRIGGER TRG_DATAS_MATRICULAS
ON MATRICULA
AFTER INSERT
AS
BEGIN
	IF EXISTS (SELECT 1 FROM INSERTED WHERE DATA_INICIO > DATA_FIM)

	BEGIN
		RAISERROR('Data de inicio não pode ser maior que data de fim', 16, 1)
		ROLLBACK TRANSACTION
	END
END
GO

-- TRIGGER DE UPDATE

CREATE TABLE BKP_ALUNO_TELEFONE(
	IDTELEFONE INT,
	NUMERO_ANTIGO VARCHAR (15),
	NUMERO_NOVO VARCHAR (15),
	TIPO_ANTIGO CHAR(3),
	TIPO_NOVO CHAR(3),
	FK_IDALUNO INT
)
GO

CREATE TRIGGER TRG_BKP_ALUNO_TELEFONE
ON TELEFONE_ALUNO
AFTER UPDATE
AS
BEGIN
	INSERT INTO BKP_ALUNO_TELEFONE(IDTELEFONE, NUMERO_ANTIGO, NUMERO_NOVO, TIPO_ANTIGO, TIPO_NOVO, FK_IDALUNO)
	SELECT D.IDTELEFONE, D.NUMERO, I.NUMERO, D.TIPO, I.TIPO, D.FK_IDALUNO
	FROM DELETED D
	INNER JOIN INSERTED I ON D.IDTELEFONE = I.IDTELEFONE
	WHERE D.NUMERO <> I.NUMERO OR D.TIPO <> I.TIPO 
END
GO

